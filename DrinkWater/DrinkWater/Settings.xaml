<Window x:Class="DrinkWater.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DrinkWater"
        mc:Ignorable="d"
        Title="Settings" Height="1050" Width="1876"
        WindowState="Maximized"
        WindowStyle="None" Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="Combobox" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid x:Name="ButtonGrid1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="10"  Background="#6983D9" BorderBrush="Transparent" BorderThickness="1" />
                                            <Border Grid.Column="0" CornerRadius="10,0,0,10"  Margin="1"  Background="#6983D9"  BorderBrush="Transparent" BorderThickness="0,0,1,0" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="#F2F2F2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Height="9" Stretch="Fill" Width="18" />
                                            <Grid.RenderTransform>
                                                <ScaleTransform />
                                            </Grid.RenderTransform>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid1"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.08"/>
                                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid1"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.08"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid1"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid1"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#6983D9" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="15"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden"  IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#E1EDFD" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollButton" TargetType="{x:Type Button}">

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontFamily" Value="Marlett"/>
            <Setter Property="FontSize" Value="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <Grid Name="ButtonGrid2" Background="Transparent">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter  x:Name="contentPresenter" Focusable="False"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                            <Grid.RenderTransform>
                                <ScaleTransform />
                            </Grid.RenderTransform>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid2"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.08"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid2"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.08"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid2"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid2"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ProfileButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Name="ButtonGrid3" Background="Transparent">
                            <Border x:Name="border" CornerRadius="50" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                            <Grid.RenderTransform>
                                <ScaleTransform />
                            </Grid.RenderTransform>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid3"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.08"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid3"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.08"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid3"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid3"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="Buttons" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Name="ButtonGrid4" Background="Transparent">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                            <Grid.RenderTransform>
                                <ScaleTransform />
                            </Grid.RenderTransform>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid4"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.08"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid4"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.08"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid4"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid4"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Static.Foreground3" Color="#FF0A2140"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF0A2140"/>
        <Style x:Key="TransparentButtons" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="#2C3B58"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="#6983D9"></Setter>
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter  Property="BorderBrush" Value="Transparent"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Viewbox Stretch="Fill">
        <Grid Height="1034" Width="1876">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Rectangle HorizontalAlignment="Left" Height="762" Margin="620,162,0,0" VerticalAlignment="Top" Width="1153" Fill="#FFFFFF" RadiusX="10" RadiusY="10">
                <Rectangle.Effect>
                    <DropShadowEffect Color="LightSteelBlue" ShadowDepth="2" BlurRadius="20" />
                </Rectangle.Effect>
            </Rectangle>
            <Button Style="{DynamicResource Buttons}" x:Name="UserSettingsButton" Content="User settings" FontSize="24" HorizontalAlignment="Left" Margin="107,481,0,0" VerticalAlignment="Top" Click="UserSettings_Click" Width="320" Height="64" Grid.Column="0" Grid.Row="0" Background="#FFE1EDFD" BorderBrush="#FFE1EDFD" Foreground="#FF0A2140"/>
            <Button  Style="{DynamicResource Buttons}" x:Name="UserParametersButton" Content="User parameters" FontSize="24" HorizontalAlignment="Left" Margin="107,569,0,0" VerticalAlignment="Top" Click="UserParameters_Click" Width="320" Height="64" Background="#FFE1EDFD" BorderBrush="#FFE1EDFD" Foreground="#FF0A2140"/>
            <Button Style="{DynamicResource TransparentButtons}"  x:Name="LogOutButton" Content="Log out" FontSize="24" HorizontalAlignment="Left" Margin="108,813,0,0" VerticalAlignment="Top" Click="LogOut_Click" Width="320" Height="64" BorderBrush="Transparent" Background="Transparent" FontWeight="Bold"/>
            <Image  x:Name="Avatar" HorizontalAlignment="Left" Height="230" Margin="170,162,0,0" VerticalAlignment="Top" Width="261">
                <Image.Clip>
                    <EllipseGeometry
                  Center="100,100" RadiusX="73" RadiusY="73"/>
                </Image.Clip>
            </Image>
            <Grid x:Name="UserSettingsGrid" HorizontalAlignment="Left" Height="455" Margin="701,270,0,0" VerticalAlignment="Top" Visibility="Visible">
                <TextBox x:Name ="PasswordTextBox" Text="********" Padding="10" FontSize="28" TextWrapping="Wrap" Width="1053" Height="68" Visibility="Visible" BorderThickness="2" VerticalAlignment="Top" Margin="0,204,0,0" HorizontalAlignment="Center" BorderBrush="#FF3C3D3F" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBox x:Name ="UsernameTextBox" Text="Username" Padding="10" FontSize="28" TextWrapping="Wrap" Width="1053" Height="68" Visibility="Visible" BorderThickness="2" VerticalAlignment="Top" Margin="0,57,0,0" HorizontalAlignment="Center" BorderBrush="#FF3C3D3F" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBox x:Name="EmailTextBox" Text="Email" Padding="10" FontSize="28" TextWrapping="Wrap" Width="1053" Height="68" Visibility="Visible" BorderThickness="2" VerticalAlignment="Top" Margin="0,354,0,0" HorizontalAlignment="Center" BorderBrush="#FF3C3D3F" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <Label x:Name ="UsernameLabel" Content="Username:" FontSize="28" Width="164" Height="50" Visibility="Visible" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,10,0,0" FontWeight="Bold"/>
                <Label x:Name ="PasswordLabel" Content="Password:" FontSize="28" Width="164" Height="50" Visibility="Visible" VerticalAlignment="Top" Margin="0,160,0,0" HorizontalAlignment="Left" FontWeight="Bold"/>
                <Label x:Name ="EmailLabel" Content="Email:" FontSize="28" Width="164" Height="50" Visibility="Visible" VerticalAlignment="Top" Margin="0,310,0,0" HorizontalAlignment="Left" FontWeight="Bold"/>

            </Grid>

            <ComboBox x:Name="NotificationsSettings" Padding="15" HorizontalAlignment="Left" Margin="107,657,0,0" VerticalAlignment="Top" Width="320" Height="64" SelectedIndex="0" FontSize="24" Visibility="Visible" SelectionChanged="NotificationsSettings_SelectionChanged" Style="{StaticResource Combobox}" BorderBrush="#FF562D2D" Foreground="#F2F2F2">
                <ComboBoxItem Visibility="Collapsed" FontSize="24" Content="Notification schedule"  Foreground="Black"/>
                <ComboBoxItem  Foreground="Black" Content="Every hour"/>
                <ComboBoxItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Custom input: " Foreground="Black" VerticalAlignment="Center"/>
                        <TextBox x:Name="CustomPeriodTextBox"  Foreground="Black" Text="0"  Width="50" BorderBrush="Transparent"/>
                    </StackPanel>
                </ComboBoxItem>
                <ComboBoxItem Content="Every day" Foreground="Black"/>
                <ComboBoxItem>
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="Disabled: " VerticalAlignment="Center" Foreground="Black"/>
                        <CheckBox x:Name="IsDisabled" VerticalAlignment="Center" BorderBrush="Transparent">
                            <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>

                    </StackPanel>
                </ComboBoxItem>
            </ComboBox>
            <Grid x:Name="UserParametersGrid" HorizontalAlignment="Left" Height="Auto" Margin="701,290,0,0" VerticalAlignment="Top" Width="Auto" Visibility="Hidden">

                <ComboBox x:Name="GenderList" FontSize="24" HorizontalAlignment="Left" Margin="10,454,0,0" VerticalAlignment="Top" Width="235" Height="68" SelectedIndex="0" Visibility="Visible" Padding="20" Style="{StaticResource Combobox}" Foreground="#F2F2F2" SelectionChanged="GenderList_SelectionChanged">
                    <ComboBoxItem Visibility="Collapsed" Content="Gender" Foreground="Black"/>
                    <ComboBoxItem x:Name="Male" IsSelected="False" Content="Male"  Foreground="Black"/>
                    <ComboBoxItem x:Name="Female" IsSelected="False" Content="Female"  Foreground="Black"/>
                </ComboBox>
                <TextBox x:Name ="WakeUpTextBox" HorizontalAlignment="Left" Padding="10" Margin="380,466,0,0" Text="00:00:00" FontSize="28" TextWrapping="Wrap" VerticalAlignment="Top" Width="164" Height="68" Visibility="Visible" BorderBrush="#FF3C3D3F" BorderThickness="2" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <Label x:Name ="ActivityTimeLabel" Content="Wake up:" FontSize="28" HorizontalAlignment="Left" Margin="380,416,0,0" VerticalAlignment="Top" Width="198" Visibility="Visible" FontWeight="Bold"/>
                <TextBox x:Name="WeightTextBox"  HorizontalAlignment="Center" Padding="10" Margin="0,43,0,0" Text="Weigh" FontSize="28"  TextWrapping="Wrap" VerticalAlignment="Top" Width="1044" Height="68" BorderBrush="#FF3C3D3F" BorderThickness="2" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBox x:Name="HeightTextBox" HorizontalAlignment="Center" Margin="0,178,0,0" Padding="10" Text="Height" FontSize="28" TextWrapping="Wrap" VerticalAlignment="Top" Width="1044" Height="68" BorderBrush="#FF3C3D3F" BorderThickness="2" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBox x:Name="AgeTextBox" HorizontalAlignment="Center" Padding="10" Margin="0,310,0,0" Text="Age" FontSize="28" TextWrapping="Wrap" VerticalAlignment="Top" Width="1044" Height="68"  BorderBrush="#FF3C3D3F" BorderThickness="2" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <TextBox x:Name="GoingToBedTextBox" HorizontalAlignment="Left" Padding="10" Margin="568,466,0,0" Text="00:00:00" FontSize="28" TextWrapping="Wrap" VerticalAlignment="Top" Width="164" Height="68" BorderBrush="#FF3C3D3F" BorderThickness="2" Foreground="#FF6E6C6C">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <Label x:Name="WeightLabel" Content="Weight:" FontSize="28" HorizontalAlignment="Left" VerticalAlignment="Top" Width="126" Height="50" Margin="0,-2,0,0" FontWeight="Bold"/>
                <Label x:Name="HeightLabel" Content="Height:" FontSize="28" HorizontalAlignment="Left" Margin="0,133,0,0" VerticalAlignment="Top" Width="126" Height="50" FontWeight="Bold"/>
                <Label x:Name="AgeLabel" Content="Age:" FontSize="28" HorizontalAlignment="Left" Margin="0,267,0,0" VerticalAlignment="Top" Width="96" Height="50" FontWeight="Bold"/>
                <Label x:Name ="ActivityTimeLabel2" Content="Going to bed:" FontSize="28" HorizontalAlignment="Left" Margin="568,416,0,0" VerticalAlignment="Top" Width="198" Visibility="Visible" FontWeight="Bold"/>
            </Grid>
            <Button x:Name="ChangeAvatar" Style="{DynamicResource TransparentButtons}" Content="Change avatar" FontSize="24" HorizontalAlignment="Left" Margin="178,412,0,0" VerticalAlignment="Top" Width="179" Height="45" Click="ChangeAvatar_Click" Background="Transparent" BorderBrush="Transparent" FontWeight="Bold"/>
            <Button Style="{DynamicResource ProfileButton}"  FontFamily="Segoe MDL2 Assets" Content="&#xE77B;" x:Name="ProfileWindowButton" FontSize="36" HorizontalAlignment="Left" Margin="1715,44,0,0" VerticalAlignment="Top" Height="68" Width="68" Click="ProfileWindowButton_Click" FontWeight="Bold" BorderBrush="#FF0A2140" Background="#FF0A2140" Foreground="#FFC2B9B9"/>
            <Button Style="{DynamicResource ScrollButton}" x:Name="Main" FontFamily="Segoe MDL2 Assets" Content="&#xE76B;" HorizontalAlignment="Left" Height="45" Margin="45,33,0,0" VerticalAlignment="Top" Width="50" Click="Main_Click" RenderTransformOrigin="0.487,0.482" FontSize="36" Foreground="#FF0A2140"/>
            <ComboBox HorizontalAlignment="Left" Height="8" Margin="301,85,0,0" VerticalAlignment="Top" Width="0"/>
            <Label Content="Settings" HorizontalAlignment="Left" Height="47" Margin="104,31,0,0" VerticalAlignment="Top" Width="102" FontSize="24" Foreground="#FF0A2140"/>
            <Label Content="Parameters" HorizontalAlignment="Left" Margin="701,177,0,0" VerticalAlignment="Top" FontSize="48" Foreground="#FF0A2140"/>
            <Button  Style="{DynamicResource Buttons}" x:Name="SaveChangesButton" Content="Save" FontSize="24" FontFamily="Roboto" HorizontalAlignment="Left" Margin="1537,818,0,0" VerticalAlignment="Top" Width="202" Height="74" Click="SaveChangesButton_Click" Background="#FF0A2140" BorderBrush="#FF0A2140" Foreground="#FFEAECF0" FontWeight="Bold">
                <Button.Effect>
                    <DropShadowEffect Color="DarkBlue" ShadowDepth="2" BlurRadius="10" />
                </Button.Effect>
            </Button>
            <Label Name="ErrorLabel" Content="" FontFamily="14" HorizontalAlignment="Left" Margin="701,824,0,0" VerticalAlignment="Top" Width="815" Height="100"/>

        </Grid>
    </Viewbox>
</Window>
